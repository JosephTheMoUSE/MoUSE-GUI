name: Code linter

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.11]
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install hdf5 conf on macOS
      if: matrix.os == 'macos-latest'
      run: brew install hdf5
    - name: Install hdf5 conf on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y libhdf5-dev
    - name: Set up Vcpkg on Windows
      if: matrix.os == 'windows-latest'
      run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
    - name: Install HDF5 on Windows using Vcpkg
      if: matrix.os == 'windows-latest'
      run: .\vcpkg\vcpkg.exe install hdf5
      #    - name: Set HDF5_DIR for macOS
#      if: matrix.os == 'macos-latest'
#      run: echo "HDF5_DIR=$(brew --prefix hdf5)" >> $GITHUB_ENV
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install Poetry
      run: |
          python3 -m pip install --upgrade pip
          pip install poetry
    - name: Display Poetry version
      run: |
          poetry --version
    - name: Install dependencies
      run: poetry install
    - name: Run YAPF
      run: |
          cd $GITHUB_WORKSPACE
          poetry run yapf -i -r .